What is the Strategy Design Pattern?

define a family of algorithms, encapsulate each one, and make them interchangeable.
Strategy lets the algorithm vary independently from clients that use it.

The Strategy Design Pattern is used when we have multiple algorithms (solutions) for a specific task and the client decides the actual implementation to be used at runtime.

In simple words, we can say that the Strategy Design Pattern (also called policy pattern) attempts to solve the issue
where you need to provide multiple solutions for the same problem so that one can be selected at runtime.

Let us understand the strategy design pattern using one real-time example.
Please have a look at the following image.
As you can see, in my D drive I have a folder called DotNetDesignPattern and within that folder, multiple text files are there.
My business requirement is, I have to compress this DotNetDesignPattern folder and send the compressed file to the client.

For this requirement, I have two solutions.
The first solution is, I can compress the folder into rar format and send it to the client
The second solution is, I can compress the folder into zip format and sends it to the client.
So, for the above requirement, I have two solutions.

As per the strategy design pattern, for the particular problem (task) there are multiple solutions and which solution to be used will be decided by the client at runtime.
So, in our example, the client will decide at runtime in which format he wants the file.